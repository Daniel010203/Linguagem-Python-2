import sqlite3
from pathlib import Path

ROOT_PATH = Path(__file__).parent

conexao = sqlite3.connect(ROOT_PATH / "meu_banco.sqlite")
cursor = conexao.cursor()
cursor.row_factory = sqlite3.Row

id_cliente = input("Informe o id do cliente: ")
cursor.execute(f"SELECT * FROM clientes WHERE id={id_cliente}")

clientes = cursor.fetchall()

for cliente in clientes:
    print(dict(cliente))


#Explica√ß√£o do c√≥digo passo a passo. üòä

#1. **Conex√£o com o banco de dados:**
#    - Primeiro, o c√≥digo importa o m√≥dulo `sqlite3`, que fornece uma interface para trabalhar com bancos de dados SQLite em Python¬π.
#    - A vari√°vel `ROOT_PATH` √© definida como o diret√≥rio pai do arquivo atual (onde o script est√° sendo executado).
#    - A linha `conexao = sqlite3.connect(ROOT_PATH / "meu_banco.sqlite")` cria uma conex√£o com o banco de dados SQLite chamado "meu_banco.sqlite".
#    - Essa conex√£o permite interagir com o banco de dados, executar consultas e transa√ß√µes.

#2. **Cursor:**
#    - O objeto `cursor` √© criado a partir da conex√£o.
#    - O cursor √© usado para executar comandos SQL no banco de dados.
#    - A linha `cursor.row_factory = sqlite3.Row` configura o cursor para retornar os resultados como objetos do tipo `Row`, que permitem acessar as colunas por nome.

#3. **Entrada do usu√°rio:**
#    - O c√≥digo solicita ao usu√°rio que informe o `id` de um cliente.
#    - O valor inserido pelo usu√°rio √© armazenado na vari√°vel `id_cliente`.

#4. **Consulta SQL:**
#    - A linha `cursor.execute(f\"SELECT * FROM clientes WHERE id={id_cliente}\")` executa uma consulta SQL na tabela "clientes".
#    - Ela busca todos os registros cujo `id` corresponde ao valor fornecido pelo usu√°rio.
#    - Os resultados s√£o armazenados na vari√°vel `clientes`.

#5. **Itera√ß√£o e impress√£o:**
#    - O loop `for cliente in clientes:` itera sobre cada registro encontrado.
#    - A fun√ß√£o `dict(cliente)` converte o objeto `Row` em um dicion√°rio, facilitando o acesso aos valores das colunas.
#    - Os dados do cliente s√£o impressos no formato de dicion√°rio.



#Fonte: conversa com o Copilot, 24/06/2024
#(1) sqlite3 ‚Äî DB-API 2.0 interface for SQLite databases - Python. https://docs.python.org/pt-br/3/library/sqlite3.html.
#(2) Python SQLite3: Aprenda a utilizar o banco de dados SQLite3 com Python. https://bing.com/search?q=fun%c3%a7%c3%b5es+do+c%c3%b3digo+Python+sqlite3.
#(3) Tutorial: Aplica√ß√£o em Python + SQLite (Parte 02) | Raccoon Nina. https://raccoon.ninja/pt/post/dev/tutorial-aplicacao-em-python-sqlite-parte-02/.
#(4) Python SQLite3: Aprenda a utilizar o banco de dados SQLite3 com Python. https://awari.com.br/python-sqlite3-aprenda-a-utilizar-o-banco-de-dados-sqlite3-com-python/.
#(5) Domine o Python com SQLite: Tutorial completo de instala√ß√£o e .... https://www.usandopy.com/pt/artigo/domine-o-python-com-sqlite-tutorial-completo-de-instalacao-e-configuracao-do-sqlite-no-python/.
#(6) undefined. https://www.sqlite.org.
#(7) undefined. https://www.w3schools.com/sql/.